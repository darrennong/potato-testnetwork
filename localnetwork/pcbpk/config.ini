# the endpoint upon which to listen for incoming connections (potato::bnet_plugin)
bnet-endpoint = 0.0.0.0:4001

# this peer will request only irreversible blocks from other nodes (potato::bnet_plugin)
bnet-follow-irreversible = 0

# the number of threads to use to process network messages (potato::bnet_plugin)
# bnet-threads = 

# remote endpoint of other node to connect to; Use multiple bnet-connect options as needed to compose a network (potato::bnet_plugin)
# bnet-connect = 
bnet-connect = 127.0.0.1:4000 #pcbpa
bnet-connect = 127.0.0.1:4001 #pcbpb
bnet-connect = 127.0.0.1:4002 #pcbpc
bnet-connect = 127.0.0.1:4003 #pcbpd
bnet-connect = 127.0.0.1:4004 #pcbpe
bnet-connect = 127.0.0.1:4005 #pcbpf
bnet-connect = 127.0.0.1:4006 #pcbpg
bnet-connect = 127.0.0.1:4007 #pcbph
bnet-connect = 127.0.0.1:4008 #pcbpi

bnet-connect = 127.0.0.1:4000 #pcbpj
#bnet-connect = 127.0.0.1:4001 #pcbpk
bnet-connect = 127.0.0.1:4002 #pcbpl
bnet-connect = 127.0.0.1:4003 #pcbpm
bnet-connect = 127.0.0.1:4004 #pcbpn
bnet-connect = 127.0.0.1:4005 #pcbpo
bnet-connect = 127.0.0.1:4006 #pcbpp
bnet-connect = 127.0.0.1:4007 #pcbpq
bnet-connect = 127.0.0.1:4008 #pcbpr

bnet-connect = 127.0.0.1:4000 #pcbps
bnet-connect = 127.0.0.1:4001 #pcbpt
bnet-connect = 127.0.0.1:4002 #pcbpu
bnet-connect = 127.0.0.1:4003 #pcbpv
bnet-connect = 127.0.0.1:4004 #pcbpw
bnet-connect = 127.0.0.1:4005 #pcbpx
bnet-connect = 127.0.0.1:4006 #pcbpy
bnet-connect = 127.0.0.1:4007 #pcbpz

# this peer will request no pending transactions from other nodes (potato::bnet_plugin)
bnet-no-trx = false

# The string used to format peers when logging messages about them.  Variables are escaped with ${<variable name>}.
# Available Variables:
#    _name  	self-reported name
# 
#    _id    	self-reported ID (Public Key)
# 
#    _ip    	remote IP address of peer
# 
#    _port  	remote port number of peer
# 
#    _lip   	local IP address connected to peer
# 
#    _lport 	local port number connected to peer
# 
#  (potato::bnet_plugin)
bnet-peer-log-format = ["${_name}" ${_ip}:${_port}]

# the location of the blocks directory (absolute path or relative to application data dir) (potato::chain_plugin)
blocks-dir = "blocks"

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints. (potato::chain_plugin)
# checkpoint = 

# Override default WASM runtime (potato::chain_plugin)
# wasm-runtime = 

# Override default maximum ABI serialization time allowed in ms (potato::chain_plugin)
abi-serializer-max-time-ms = 15000

# Maximum size (in MiB) of the chain state database (potato::chain_plugin)
chain-state-db-size-mb = 1024

# Safely shut down node when free space remaining in the chain state database drops below this size (in MiB). (potato::chain_plugin)
chain-state-db-guard-size-mb = 128

# Maximum size (in MiB) of the reversible blocks database (potato::chain_plugin)
reversible-blocks-db-size-mb = 340

# Safely shut down node when free space remaining in the reverseible blocks database drops below this size (in MiB). (potato::chain_plugin)
reversible-blocks-db-guard-size-mb = 2

# print contract's output to console (potato::chain_plugin)
contracts-console = false

# Account added to actor whitelist (may specify multiple times) (potato::chain_plugin)
# actor-whitelist = 

# Account added to actor blacklist (may specify multiple times) (potato::chain_plugin)
# actor-blacklist = 

# Contract account added to contract whitelist (may specify multiple times) (potato::chain_plugin)
# contract-whitelist = 

# Contract account added to contract blacklist (may specify multiple times) (potato::chain_plugin)
# contract-blacklist = 

# Action (in the form code::action) added to action blacklist (may specify multiple times) (potato::chain_plugin)
# action-blacklist = 

# Public key added to blacklist of keys that should not be included in authorities (may specify multiple times) (potato::chain_plugin)
# key-blacklist = 

# Database read mode ("speculative" or "head").
# In "speculative" mode database contains changes done up to the head block plus changes made by transactions not yet included to the blockchain.
# In "head" mode database contains changes done up to the current head block.
#  (potato::chain_plugin)
read-mode = speculative

# Track actions which match receiver:action:actor. Actor may be blank to include all. Receiver and Action may not be blank. (potato::history_plugin)
# filter-on = 

# PEM encoded trusted root certificate (or path to file containing one) used to validate any TLS connections made.  (may specify multiple times)
#  (potato::http_client_plugin)
# https-client-root-cert = 

# true: validate that the peer certificates are valid and trusted, false: ignore cert errors (potato::http_client_plugin)
https-client-validate-peers = 1

# The local IP and port to listen for incoming http connections; set blank to disable. (potato::http_plugin)
http-server-address = 

# The local IP and port to listen for incoming https connections; leave blank to disable. (potato::http_plugin)
# https-server-address = 

# Filename with the certificate chain to present on https connections. PEM format. Required for https. (potato::http_plugin)
# https-certificate-chain-file = 

# Filename with https private key in PEM format. Required for https (potato::http_plugin)
# https-private-key-file = 

# Specify the Access-Control-Allow-Origin to be returned on each request. (potato::http_plugin)
access-control-allow-origin = *

# Specify the Access-Control-Allow-Headers to be returned on each request. (potato::http_plugin)
# access-control-allow-headers = 

# Specify the Access-Control-Max-Age to be returned on each request. (potato::http_plugin)
# access-control-max-age = 

# Specify if Access-Control-Allow-Credentials: true should be returned on each request. (potato::http_plugin)
access-control-allow-credentials = false

# The maximum body size in bytes allowed for incoming RPC requests (potato::http_plugin)
max-body-size = 1048576

# Append the error log to HTTP responses (potato::http_plugin)
verbose-http-errors = false

# If set to false, then any incoming "Host" header is considered valid (potato::http_plugin)
http-validate-host = 0

# Additionaly acceptable values for the "Host" header of incoming HTTP requests, can be specified multiple times.  Includes http/s_server_address by default. (potato::http_plugin)
# http-alias = 

# The target queue size between nodeos and MongoDB plugin thread. (potato::mongo_db_plugin)
mongodb-queue-size = 1024

# The maximum size of the abi cache for serializing data. (potato::mongo_db_plugin)
mongodb-abi-cache-size = 2048

# Required with --replay-blockchain, --hard-replay-blockchain, or --delete-all-blocks to wipe mongo db.This option required to prevent accidental wipe of mongo db. (potato::mongo_db_plugin)
mongodb-wipe = false

# If specified then only abi data pushed to mongodb until specified block is reached. (potato::mongo_db_plugin)
mongodb-block-start = 0

# MongoDB URI connection string, see: https://docs.mongodb.com/master/reference/connection-string/. If not specified then plugin is disabled. Default database 'POTATO' is used if not specified in URI. Example: mongodb://127.0.0.1:27017/POTATO (potato::mongo_db_plugin)
# mongodb-uri = 

# The actual host:port used to listen for incoming p2p connections. (potato::net_plugin)
p2p-listen-endpoint = 0.0.0.0:9011

# An externally accessible host:port for identifying this node. Defaults to p2p-listen-endpoint. (potato::net_plugin)
# p2p-server-address =

# The public endpoint of a peer node to connect to. Use multiple p2p-peer-address options as needed to compose a network. (potato::net_plugin)
# p2p-peer-address = 
p2p-peer-address = 127.0.0.1:9000 #pcbpa
p2p-peer-address = 127.0.0.1:9001 #pcbpb
p2p-peer-address = 127.0.0.1:9001 #pcbpc
p2p-peer-address = 127.0.0.1:9003 #pcbpd
p2p-peer-address = 127.0.0.1:9004 #pcbpe
p2p-peer-address = 127.0.0.1:9005 #pcbpf
p2p-peer-address = 127.0.0.1:9006 #pcbpg
p2p-peer-address = 127.0.0.1:9007 #pcbph
p2p-peer-address = 127.0.0.1:9008 #pcbpi

p2p-peer-address = 127.0.0.1:9010 #pcbpj
#p2p-peer-address = 127.0.0.1:9011 #pcbpk
p2p-peer-address = 127.0.0.1:9012 #pcbpl
p2p-peer-address = 127.0.0.1:9013 #pcbpm
p2p-peer-address = 127.0.0.1:9014 #pcbpn
p2p-peer-address = 127.0.0.1:9015 #pcbpo
p2p-peer-address = 127.0.0.1:9016 #pcbpp
p2p-peer-address = 127.0.0.1:9017 #pcbpq
p2p-peer-address = 127.0.0.1:9018 #pcbpr

p2p-peer-address = 127.0.0.1:9020 #pcbps
p2p-peer-address = 127.0.0.1:9021 #pcbpt
p2p-peer-address = 127.0.0.1:9022 #pcbpu
p2p-peer-address = 127.0.0.1:9023 #pcbpv
p2p-peer-address = 127.0.0.1:9024 #pcbpw
p2p-peer-address = 127.0.0.1:9025 #pcbpx
p2p-peer-address = 127.0.0.1:9026 #pcbpy
p2p-peer-address = 127.0.0.1:9027 #pcbpz

# Maximum number of client0nodes from any single IP address (potato::net_plugin)
p2p-max-nodes-per-host = 10

# The name supplied to identify this node amongst the peers. (potato::net_plugin)
agent-name = "Agent pcbpk"

# Can be 'any' or 'producers' or 'specified' or 'none'. If 'specified', peer-key must be specified at least once. If only 'producers', peer-key is not required. 'producers' and 'specified' may be combined. (potato::net_plugin)
allowed-connection = any

# Optional public key of peer allowed to connect.  May be used multiple times. (potato::net_plugin)
# peer-key = 

# Tuple of [PublicKey, WIF private key] (may specify multiple times) (potato::net_plugin)
# peer-private-key = 

# Maximum number of clients from which connections are accepted, use 0 for no limit (potato::net_plugin)
max-clients = 25

# number of seconds to wait before cleaning up dead connections (potato::net_plugin)
connection-cleanup-period = 30

# True to require exact match of peer network version. (potato::net_plugin)
network-version-match = 0

# number of blocks to retrieve in a chunk from any individual peer during synchronization (potato::net_plugin)
sync-fetch-span = 100

# maximum sizes of transaction or block messages that are sent without first sending a notice (potato::net_plugin)
max-implicit-request = 1500

# Enable expirimental socket read watermark optimization (potato::net_plugin)
use-socket-read-watermark = 0

# The string used to format peers when logging messages about them.  Variables are escaped with ${<variable name>}.
# Available Variables:
#    _name  	self-reported name
# 
#    _id    	self-reported ID (64 hex characters)
# 
#    _sid   	first 8 characters of _peer.id
# 
#    _ip    	remote IP address of peer
# 
#    _port  	remote port number of peer
# 
#    _lip   	local IP address connected to peer
# 
#    _lport 	local port number connected to peer
# 
#  (potato::net_plugin)
peer-log-format = ["${_name}" ${_ip}:${_port}]

# Enable block production, even if the chain is stale. (potato::producer_plugin)
enable-stale-production = false

# Start this node in a state where production is paused (potato::producer_plugin)
pause-on-startup = false

# Limits the maximum time (in milliseconds) that is allowed a pushed transaction's code to execute before being considered invalid (potato::producer_plugin)
max-transaction-time = 30

# Limits the maximum age (in seconds) of the DPOS Irreversible Block for a chain this node will produce blocks on (use negative value to indicate unlimited) (potato::producer_plugin)
max-irreversible-block-age = -1

# ID of producer controlled by this node (e.g. inita; may specify multiple times) (potato::producer_plugin)
producer-name = pcbpk

# (DEPRECATED - Use signature-provider instead) Tuple of [public key, WIF private key] (may specify multiple times) (potato::producer_plugin)
# private-key = 

# Key=Value pairs in the form <public-key>=<provider-spec>
# Where:
#    <public-key>    	is a string form of a vaild PCOIN public key
# 
#    <provider-spec> 	is a string in the form <provider-type>:<data>
# 
#    <provider-type> 	is KEY, or KEOSD
# 
#    KEY:<data>      	is a string form of a valid PCOIN private key which maps to the provided public key
# 
#    KEOSD:<data>    	is the URL where keosd is available and the approptiate wallet(s) are unlocked (potato::producer_plugin)
signature-provider = PC7WnhaKwHpbSidYuh2DF1qAExTRUtPEdZCaZqt75cKcixuQUtdA=KEY:5K6LU8aVpBq9vJsnpCvaHCcyYwzPPKXfDdyefYyAMMs3Qy42fUr

# Limits the maximum time (in milliseconds) that is allowd for sending blocks to a keosd provider for signing (potato::producer_plugin)
keosd-provider-timeout = 5

# account that can not access to extended CPU/NET virtual resources (potato::producer_plugin)
# greylist-account = 

# offset of non last block producing time in micro second. Negative number results in blocks to go out sooner, and positive number results in blocks to go out later (potato::producer_plugin)
produce-time-offset-us = 0

# offset of last block producing time in micro second. Negative number results in blocks to go out sooner, and positive number results in blocks to go out later (potato::producer_plugin)
last-block-time-offset-us = 0

# The path of the wallet files (absolute path or relative to application data dir) (potato::wallet_plugin)
wallet-dir = "."

# Timeout for unlocked wallet in seconds (default 900 (15 minutes)). Wallets will automatically lock after specified number of seconds of inactivity. Activity is defined as any wallet command e.g. list-wallets. (potato::wallet_plugin)
unlock-timeout = 900

# Override default URL of http://localhost:12345 for connecting to yubihsm-connector (potato::wallet_plugin)
# yubihsm-url = 

# Enables YubiHSM support using given Authkey (potato::wallet_plugin)
# yubihsm-authkey = 

# Plugin(s) to enable, may be specified multiple times
# plugin = 
plugin = potato::producer_plugin
#plugin = potato::producer_api_plugin
plugin = potato::http_plugin
plugin = potato::chain_plugin
#plugin = potato::chain_api_plugin
#plugin = potato::history_plugin
#plugin = potato::history_api_plugin
plugin = potato::net_plugin
#plugin = potato::net_api_plugin
#plugin = potato::wallet_plugin
#plugin = potato::wallet_api_plugin
plugin = potato::bnet_plugin
