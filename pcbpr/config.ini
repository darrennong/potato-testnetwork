# the endpoint upon which to listen for incoming connections (pcoin::bnet_plugin)
bnet-endpoint = 0.0.0.0:4001

# the number of threads to use to process network messages (pcoin::bnet_plugin)
# bnet-threads = 

# remote endpoint of other node to connect to; Use multiple bnet-connect options as needed to compose a network (pcoin::bnet_plugin)
# bnet-connect = 

# this peer will request no pending transactions from other nodes (pcoin::bnet_plugin)
bnet-no-trx = false

# the location of the blocks directory (absolute path or relative to application data dir) (pcoin::chain_plugin)
blocks-dir = "blocks"

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints. (pcoin::chain_plugin)
# checkpoint = 

# Override default WASM runtime (pcoin::chain_plugin)
# wasm-runtime = 

# Maximum size (in MB) of the chain state database (pcoin::chain_plugin)
chain-state-db-size-mb = 1024

# Maximum size (in MB) of the reversible blocks database (pcoin::chain_plugin)
reversible-blocks-db-size-mb = 340

# print contract's output to console (pcoin::chain_plugin)
contracts-console = false

# Account added to actor whitelist (may specify multiple times) (pcoin::chain_plugin)
# actor-whitelist = 

# Account added to actor blacklist (may specify multiple times) (pcoin::chain_plugin)
# actor-blacklist = 

# Contract account added to contract whitelist (may specify multiple times) (pcoin::chain_plugin)
# contract-whitelist = 

# Contract account added to contract blacklist (may specify multiple times) (pcoin::chain_plugin)
# contract-blacklist = 

# Track actions which match receiver:action:actor. Actor may be blank to include all. Receiver and Action may not be blank. (pcoin::history_plugin)
# filter-on = 

# The local IP and port to listen for incoming http connections; set blank to disable. (pcoin::http_plugin)
http-server-address = 0.0.0.0:8888

# The local IP and port to listen for incoming https connections; leave blank to disable. (pcoin::http_plugin)
# https-server-address = 

# Filename with the certificate chain to present on https connections. PEM format. Required for https. (pcoin::http_plugin)
# https-certificate-chain-file = 

# Filename with https private key in PEM format. Required for https (pcoin::http_plugin)
# https-private-key-file = 

# Specify the Access-Control-Allow-Origin to be returned on each request. (pcoin::http_plugin)
access-control-allow-origin = *

# Specify the Access-Control-Allow-Headers to be returned on each request. (pcoin::http_plugin)
# access-control-allow-headers = 

# Specify the Access-Control-Max-Age to be returned on each request. (pcoin::http_plugin)
# access-control-max-age = 

# Specify if Access-Control-Allow-Credentials: true should be returned on each request. (pcoin::http_plugin)
access-control-allow-credentials = false

# The actual host:port used to listen for incoming p2p connections. (pcoin::net_plugin)
p2p-listen-endpoint = 0.0.0.0:9007

# An externally accessible host:port for identifying this node. Defaults to p2p-listen-endpoint. (pcoin::net_plugin)
# p2p-server-address =

# The public endpoint of a peer node to connect to. Use multiple p2p-peer-address options as needed to compose a network. (pcoin::net_plugin)
# p2p-peer-address = 
p2p-peer-address = 192.168.0.56:9000 #pcbpa
p2p-peer-address = 192.168.0.56:9001 #pcbpd
p2p-peer-address = 192.168.0.56:9002 #pcbpe
p2p-peer-address = 192.168.0.56:9003 #pcbpf
p2p-peer-address = 192.168.0.56:9004 #pcbpg
p2p-peer-address = 192.168.0.56:9005 #pcbph
p2p-peer-address = 192.168.0.56:9006 #pcbpi
p2p-peer-address = 192.168.0.56:9007 #pcbpj
p2p-peer-address = 192.168.0.56:9008 #pcbpk

p2p-peer-address = 192.168.0.57:9000 #pcbpb
p2p-peer-address = 192.168.0.57:9001 #pcbpl
p2p-peer-address = 192.168.0.57:9002 #pcbpm
p2p-peer-address = 192.168.0.57:9003 #pcbpn
p2p-peer-address = 192.168.0.57:9004 #pcbpo
p2p-peer-address = 192.168.0.57:9005 #pcbpp
p2p-peer-address = 192.168.0.57:9006 #pcbpq
#p2p-peer-address = 192.168.0.57:9007 #pcbpr
p2p-peer-address = 192.168.0.57:9008 #pcbps

p2p-peer-address = 192.168.0.58:9000 #pcbpc
p2p-peer-address = 192.168.0.58:9001 #pcbpt
p2p-peer-address = 192.168.0.58:9002 #pcbpu
p2p-peer-address = 192.168.0.58:9003 #pcbpv
p2p-peer-address = 192.168.0.58:9004 #pcbpw
p2p-peer-address = 192.168.0.58:9005 #pcbpx
p2p-peer-address = 192.168.0.58:9006 #pcbpy
p2p-peer-address = 192.168.0.58:9007 #pcbpz

# Maximum number of client0nodes from any single IP address (pcoin::net_plugin)
p2p-max-nodes-per-host = 1

# The name supplied to identify this node amongst the peers. (pcoin::net_plugin)
agent-name = "Agent pcbpr"

# Can be 'any' or 'producers' or 'specified' or 'none'. If 'specified', peer-key must be specified at least once. If only 'producers', peer-key is not required. 'producers' and 'specified' may be combined. (pcoin::net_plugin)
allowed-connection = any

# Optional public key of peer allowed to connect.  May be used multiple times. (pcoin::net_plugin)
# peer-key = 

# Tuple of [PublicKey, WIF private key] (may specify multiple times) (pcoin::net_plugin)
# peer-private-key = 

# Maximum number of clients from which connections are accepted, use 0 for no limit (pcoin::net_plugin)
max-clients = 25

# number of seconds to wait before cleaning up dead connections (pcoin::net_plugin)
connection-cleanup-period = 30

# True to require exact match of peer network version. (pcoin::net_plugin)
network-version-match = 0

# number of blocks to retrieve in a chunk from any individual peer during synchronization (pcoin::net_plugin)
sync-fetch-span = 100

# maximum sizes of transaction or block messages that are sent without first sending a notice (pcoin::net_plugin)
max-implicit-request = 1500

# Enable block production, even if the chain is stale. (pcoin::producer_plugin)
enable-stale-production = true

# Start this node in a state where production is paused (pcoin::producer_plugin)
pause-on-startup = false

# Limits the maximum time (in milliseconds) that is allowed a pushed transaction's code to execute before being considered invalid (pcoin::producer_plugin)
max-transaction-time = 30

# Limits the maximum age (in seconds) of the DPOS Irreversible Block for a chain this node will produce blocks on (pcoin::producer_plugin)
max-irreversible-block-age = 1800

# ID of producer controlled by this node (e.g. inita; may specify multiple times) (pcoin::producer_plugin)
producer-name = pcbpr

# Tuple of [public key, WIF private key] (may specify multiple times) (pcoin::producer_plugin)
private-key = ["PC8FdMPpPxpG5QAqGLncY5kBrEQ9NXPKCKnLH6oWDMPR8q8BrEmT","5K4MmsY7Th8DqjEY2vbM7npaxSQ56XzvNULkJeqKmbYoVRmPPpB"]

# The queue size between nodeos and SQL DB plugin thread. (pcoin::sql_db_plugin)
sql_db-queue-size = 256

# Sql DB URI connection string If not specified then plugin is disabled. Default database 'EOS' is used if not specified in URI. (pcoin::sql_db_plugin)
# sql_db-uri = 

# The path of the wallet files (absolute path or relative to application data dir) (pcoin::wallet_plugin)
wallet-dir = "."

# Timeout for unlocked wallet in seconds (default 900 (15 minutes)). Wallets will automatically lock after specified number of seconds of inactivity. Activity is defined as any wallet command e.g. list-wallets. (pcoin::wallet_plugin)
unlock-timeout = 900

# pcoin key that will be imported automatically when a wallet is created. (pcoin::wallet_plugin)
# pcoin-key = 

# Plugin(s) to enable, may be specified multiple times
# plugin = 
plugin = pcoin::producer_plugin
#plugin = pcoin::producer_api_plugin
#plugin = pcoin::http_plugin
plugin = pcoin::chain_plugin
#plugin = pcoin::chain_api_plugin
#plugin = pcoin::history_plugin
#plugin = pcoin::history_api_plugin
plugin = pcoin::net_plugin
#plugin = pcoin::net_api_plugin
#plugin = pcoin::wallet_plugin
#plugin = pcoin::wallet_api_plugin
